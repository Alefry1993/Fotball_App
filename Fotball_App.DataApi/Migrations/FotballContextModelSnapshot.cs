// <auto-generated />
using Fotball_App.DataApi.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Fotball_App.DataApi.Migrations
{
    [DbContext(typeof(FotballContext))]
    partial class FotballContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.17")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Fotball_App.DataApi.Models.League", b =>
                {
                    b.Property<int>("LeagueId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("LeagueLogo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LeagueName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nationality")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("LeagueId");

                    b.ToTable("Leagues");

                    b.HasData(
                        new
                        {
                            LeagueId = 1,
                            LeagueLogo = "England.png",
                            LeagueName = "Premier League",
                            Nationality = "England"
                        },
                        new
                        {
                            LeagueId = 2,
                            LeagueLogo = "Spain.png",
                            LeagueName = "La Liga",
                            Nationality = "Spain"
                        },
                        new
                        {
                            LeagueId = 3,
                            LeagueLogo = "France.png",
                            LeagueName = "Ligue 1",
                            Nationality = "France"
                        },
                        new
                        {
                            LeagueId = 4,
                            LeagueLogo = "Italia.png",
                            LeagueName = "Serie A",
                            Nationality = "Italia"
                        },
                        new
                        {
                            LeagueId = 5,
                            LeagueLogo = "Germany.png",
                            LeagueName = "Bundesliga",
                            Nationality = "Germany"
                        });
                });

            modelBuilder.Entity("Fotball_App.DataApi.Models.Player", b =>
                {
                    b.Property<int>("PlayerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<string>("National")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PlayerName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProfileImage")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PlayerId");

                    b.ToTable("Players");

                    b.HasData(
                        new
                        {
                            PlayerId = 1,
                            Age = 38,
                            National = "Portugal",
                            PlayerName = "Cristiano Ronaldo",
                            ProfileImage = "Ronaldo.jpg"
                        },
                        new
                        {
                            PlayerId = 2,
                            Age = 34,
                            National = "France",
                            PlayerName = "Karim Benzema",
                            ProfileImage = "Karim.jpg"
                        },
                        new
                        {
                            PlayerId = 3,
                            Age = 32,
                            National = "Germany",
                            PlayerName = "Marco Reus",
                            ProfileImage = "Reus.jpg"
                        },
                        new
                        {
                            PlayerId = 4,
                            Age = 31,
                            National = "Brazil",
                            PlayerName = "Alex Sandro",
                            ProfileImage = "Alex.jpg"
                        },
                        new
                        {
                            PlayerId = 5,
                            Age = 34,
                            National = "Argentina",
                            PlayerName = "Lionel Messi",
                            ProfileImage = "Messi.jpg"
                        });
                });

            modelBuilder.Entity("Fotball_App.DataApi.Models.Team", b =>
                {
                    b.Property<int>("TeamId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Country")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TeamDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TeamLogo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TeamName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TeamId");

                    b.ToTable("Teams");

                    b.HasData(
                        new
                        {
                            TeamId = 1,
                            Country = "England",
                            TeamDescription = "One of the biggest clubs in the English league: Premier League. They have a total of 20 league titles. They are one of the top 6 clubs in the league.",
                            TeamLogo = "ManUtd.png",
                            TeamName = "Manchester United"
                        },
                        new
                        {
                            TeamId = 2,
                            Country = "Spain",
                            TeamDescription = "One of the biggest clubs in the Spanish league: La Liga",
                            TeamLogo = "RealMadrid.png",
                            TeamName = "Real Madrid"
                        },
                        new
                        {
                            TeamId = 3,
                            Country = "Germany",
                            TeamDescription = "One of the biggest clubs in the German League: Bundesliga",
                            TeamLogo = "Dortmund.png",
                            TeamName = "Borrussia Dortmund"
                        },
                        new
                        {
                            TeamId = 4,
                            Country = "Italy",
                            TeamDescription = "One of the biggest clubs in the Italien league: Serie A",
                            TeamLogo = "Juventus.png",
                            TeamName = "Juventus"
                        },
                        new
                        {
                            TeamId = 5,
                            Country = "France",
                            TeamDescription = "One of the biggest clubs in the French league: Ligue 1",
                            TeamLogo = "Psg.png",
                            TeamName = "Paris Saint Germain"
                        });
                });

            modelBuilder.Entity("TeamsInLeague", b =>
                {
                    b.Property<int>("LeaguesLeagueId")
                        .HasColumnType("int");

                    b.Property<int>("TeamTeamsId")
                        .HasColumnType("int");

                    b.HasKey("LeaguesLeagueId", "TeamTeamsId");

                    b.HasIndex("TeamTeamsId");

                    b.ToTable("TeamsInLeague");

                    b.HasData(
                        new
                        {
                            LeaguesLeagueId = 1,
                            TeamTeamsId = 1
                        },
                        new
                        {
                            LeaguesLeagueId = 2,
                            TeamTeamsId = 2
                        },
                        new
                        {
                            LeaguesLeagueId = 3,
                            TeamTeamsId = 5
                        },
                        new
                        {
                            LeaguesLeagueId = 4,
                            TeamTeamsId = 4
                        },
                        new
                        {
                            LeaguesLeagueId = 5,
                            TeamTeamsId = 3
                        });
                });

            modelBuilder.Entity("TeamsInPlayers", b =>
                {
                    b.Property<int>("TeamsTeamId")
                        .HasColumnType("int");

                    b.Property<int>("PlayersPlayerId")
                        .HasColumnType("int");

                    b.HasKey("TeamsTeamId", "PlayersPlayerId");

                    b.HasIndex("PlayersPlayerId");

                    b.ToTable("TeamsInPlayers");

                    b.HasData(
                        new
                        {
                            TeamsTeamId = 1,
                            PlayersPlayerId = 1
                        },
                        new
                        {
                            TeamsTeamId = 2,
                            PlayersPlayerId = 2
                        },
                        new
                        {
                            TeamsTeamId = 3,
                            PlayersPlayerId = 3
                        },
                        new
                        {
                            TeamsTeamId = 4,
                            PlayersPlayerId = 4
                        },
                        new
                        {
                            TeamsTeamId = 5,
                            PlayersPlayerId = 5
                        });
                });

            modelBuilder.Entity("TeamsInLeague", b =>
                {
                    b.HasOne("Fotball_App.DataApi.Models.League", null)
                        .WithMany()
                        .HasForeignKey("LeaguesLeagueId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Fotball_App.DataApi.Models.Team", null)
                        .WithMany()
                        .HasForeignKey("TeamTeamsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("TeamsInPlayers", b =>
                {
                    b.HasOne("Fotball_App.DataApi.Models.Player", null)
                        .WithMany()
                        .HasForeignKey("PlayersPlayerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Fotball_App.DataApi.Models.Team", null)
                        .WithMany()
                        .HasForeignKey("TeamsTeamId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
